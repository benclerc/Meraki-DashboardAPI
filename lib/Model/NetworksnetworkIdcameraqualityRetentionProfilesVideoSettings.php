<?php
/**
 * NetworksnetworkIdcameraqualityRetentionProfilesVideoSettings
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Meraki Dashboard API
 *
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 27 April, 2021 > > [What's New](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com)
 *
 * OpenAPI spec version: 1.0.0-streaming
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.19
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * NetworksnetworkIdcameraqualityRetentionProfilesVideoSettings Class Doc Comment
 *
 * @category Class
 * @description Video quality and resolution settings for all the camera models.
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class NetworksnetworkIdcameraqualityRetentionProfilesVideoSettings implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'networksnetworkIdcameraqualityRetentionProfiles_videoSettings';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'mv21_mv71' => '\Swagger\Client\Model\NetworksnetworkIdcameraqualityRetentionProfilesVideoSettingsMV21MV71',
        'mv12_mv22_mv72' => '\Swagger\Client\Model\NetworksnetworkIdcameraqualityRetentionProfilesVideoSettingsMV12MV22MV72',
        'mv32' => '\Swagger\Client\Model\NetworksnetworkIdcameraqualityRetentionProfilesVideoSettingsMV32',
        'mv12_we' => '\Swagger\Client\Model\NetworksnetworkIdcameraqualityRetentionProfilesVideoSettingsMV12WE',
        'mv22_xmv72_x' => '\Swagger\Client\Model\NetworksnetworkIdcameraqualityRetentionProfilesVideoSettingsMV22XMV72X'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'mv21_mv71' => null,
        'mv12_mv22_mv72' => null,
        'mv32' => null,
        'mv12_we' => null,
        'mv22_xmv72_x' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'mv21_mv71' => 'MV21/MV71',
        'mv12_mv22_mv72' => 'MV12/MV22/MV72',
        'mv32' => 'MV32',
        'mv12_we' => 'MV12WE',
        'mv22_xmv72_x' => 'MV22X/MV72X'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'mv21_mv71' => 'setMv21Mv71',
        'mv12_mv22_mv72' => 'setMv12Mv22Mv72',
        'mv32' => 'setMv32',
        'mv12_we' => 'setMv12We',
        'mv22_xmv72_x' => 'setMv22Xmv72X'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'mv21_mv71' => 'getMv21Mv71',
        'mv12_mv22_mv72' => 'getMv12Mv22Mv72',
        'mv32' => 'getMv32',
        'mv12_we' => 'getMv12We',
        'mv22_xmv72_x' => 'getMv22Xmv72X'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['mv21_mv71'] = isset($data['mv21_mv71']) ? $data['mv21_mv71'] : null;
        $this->container['mv12_mv22_mv72'] = isset($data['mv12_mv22_mv72']) ? $data['mv12_mv22_mv72'] : null;
        $this->container['mv32'] = isset($data['mv32']) ? $data['mv32'] : null;
        $this->container['mv12_we'] = isset($data['mv12_we']) ? $data['mv12_we'] : null;
        $this->container['mv22_xmv72_x'] = isset($data['mv22_xmv72_x']) ? $data['mv22_xmv72_x'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets mv21_mv71
     *
     * @return \Swagger\Client\Model\NetworksnetworkIdcameraqualityRetentionProfilesVideoSettingsMV21MV71
     */
    public function getMv21Mv71()
    {
        return $this->container['mv21_mv71'];
    }

    /**
     * Sets mv21_mv71
     *
     * @param \Swagger\Client\Model\NetworksnetworkIdcameraqualityRetentionProfilesVideoSettingsMV21MV71 $mv21_mv71 mv21_mv71
     *
     * @return $this
     */
    public function setMv21Mv71($mv21_mv71)
    {
        $this->container['mv21_mv71'] = $mv21_mv71;

        return $this;
    }

    /**
     * Gets mv12_mv22_mv72
     *
     * @return \Swagger\Client\Model\NetworksnetworkIdcameraqualityRetentionProfilesVideoSettingsMV12MV22MV72
     */
    public function getMv12Mv22Mv72()
    {
        return $this->container['mv12_mv22_mv72'];
    }

    /**
     * Sets mv12_mv22_mv72
     *
     * @param \Swagger\Client\Model\NetworksnetworkIdcameraqualityRetentionProfilesVideoSettingsMV12MV22MV72 $mv12_mv22_mv72 mv12_mv22_mv72
     *
     * @return $this
     */
    public function setMv12Mv22Mv72($mv12_mv22_mv72)
    {
        $this->container['mv12_mv22_mv72'] = $mv12_mv22_mv72;

        return $this;
    }

    /**
     * Gets mv32
     *
     * @return \Swagger\Client\Model\NetworksnetworkIdcameraqualityRetentionProfilesVideoSettingsMV32
     */
    public function getMv32()
    {
        return $this->container['mv32'];
    }

    /**
     * Sets mv32
     *
     * @param \Swagger\Client\Model\NetworksnetworkIdcameraqualityRetentionProfilesVideoSettingsMV32 $mv32 mv32
     *
     * @return $this
     */
    public function setMv32($mv32)
    {
        $this->container['mv32'] = $mv32;

        return $this;
    }

    /**
     * Gets mv12_we
     *
     * @return \Swagger\Client\Model\NetworksnetworkIdcameraqualityRetentionProfilesVideoSettingsMV12WE
     */
    public function getMv12We()
    {
        return $this->container['mv12_we'];
    }

    /**
     * Sets mv12_we
     *
     * @param \Swagger\Client\Model\NetworksnetworkIdcameraqualityRetentionProfilesVideoSettingsMV12WE $mv12_we mv12_we
     *
     * @return $this
     */
    public function setMv12We($mv12_we)
    {
        $this->container['mv12_we'] = $mv12_we;

        return $this;
    }

    /**
     * Gets mv22_xmv72_x
     *
     * @return \Swagger\Client\Model\NetworksnetworkIdcameraqualityRetentionProfilesVideoSettingsMV22XMV72X
     */
    public function getMv22Xmv72X()
    {
        return $this->container['mv22_xmv72_x'];
    }

    /**
     * Sets mv22_xmv72_x
     *
     * @param \Swagger\Client\Model\NetworksnetworkIdcameraqualityRetentionProfilesVideoSettingsMV22XMV72X $mv22_xmv72_x mv22_xmv72_x
     *
     * @return $this
     */
    public function setMv22Xmv72X($mv22_xmv72_x)
    {
        $this->container['mv22_xmv72_x'] = $mv22_xmv72_x;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


