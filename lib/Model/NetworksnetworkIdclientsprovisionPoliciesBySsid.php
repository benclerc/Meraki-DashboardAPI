<?php
/**
 * NetworksnetworkIdclientsprovisionPoliciesBySsid
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Meraki Dashboard API
 *
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 07 July, 2021 > > [What's New](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com)
 *
 * OpenAPI spec version: 1.11.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.19
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * NetworksnetworkIdclientsprovisionPoliciesBySsid Class Doc Comment
 *
 * @category Class
 * @description An object, describing the policy-connection associations for each active SSID within the network. Keys should be the number of enabled SSIDs, mapping to an object describing the client&#39;s policy
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class NetworksnetworkIdclientsprovisionPoliciesBySsid implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'networksnetworkIdclientsprovision_policiesBySsid';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        '_0' => '\Swagger\Client\Model\NetworksnetworkIdclientsprovisionPoliciesBySsid0',
        '_1' => '\Swagger\Client\Model\NetworksnetworkIdclientsprovisionPoliciesBySsid0',
        '_2' => '\Swagger\Client\Model\NetworksnetworkIdclientsprovisionPoliciesBySsid0',
        '_3' => '\Swagger\Client\Model\NetworksnetworkIdclientsprovisionPoliciesBySsid0',
        '_4' => '\Swagger\Client\Model\NetworksnetworkIdclientsprovisionPoliciesBySsid0',
        '_5' => '\Swagger\Client\Model\NetworksnetworkIdclientsprovisionPoliciesBySsid0',
        '_6' => '\Swagger\Client\Model\NetworksnetworkIdclientsprovisionPoliciesBySsid0',
        '_7' => '\Swagger\Client\Model\NetworksnetworkIdclientsprovisionPoliciesBySsid0',
        '_8' => '\Swagger\Client\Model\NetworksnetworkIdclientsprovisionPoliciesBySsid0',
        '_9' => '\Swagger\Client\Model\NetworksnetworkIdclientsprovisionPoliciesBySsid0',
        '_10' => '\Swagger\Client\Model\NetworksnetworkIdclientsprovisionPoliciesBySsid0',
        '_11' => '\Swagger\Client\Model\NetworksnetworkIdclientsprovisionPoliciesBySsid0',
        '_12' => '\Swagger\Client\Model\NetworksnetworkIdclientsprovisionPoliciesBySsid0',
        '_13' => '\Swagger\Client\Model\NetworksnetworkIdclientsprovisionPoliciesBySsid0',
        '_14' => '\Swagger\Client\Model\NetworksnetworkIdclientsprovisionPoliciesBySsid0'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        '_0' => null,
        '_1' => null,
        '_2' => null,
        '_3' => null,
        '_4' => null,
        '_5' => null,
        '_6' => null,
        '_7' => null,
        '_8' => null,
        '_9' => null,
        '_10' => null,
        '_11' => null,
        '_12' => null,
        '_13' => null,
        '_14' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        '_0' => '0',
        '_1' => '1',
        '_2' => '2',
        '_3' => '3',
        '_4' => '4',
        '_5' => '5',
        '_6' => '6',
        '_7' => '7',
        '_8' => '8',
        '_9' => '9',
        '_10' => '10',
        '_11' => '11',
        '_12' => '12',
        '_13' => '13',
        '_14' => '14'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        '_0' => 'set0',
        '_1' => 'set1',
        '_2' => 'set2',
        '_3' => 'set3',
        '_4' => 'set4',
        '_5' => 'set5',
        '_6' => 'set6',
        '_7' => 'set7',
        '_8' => 'set8',
        '_9' => 'set9',
        '_10' => 'set10',
        '_11' => 'set11',
        '_12' => 'set12',
        '_13' => 'set13',
        '_14' => 'set14'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        '_0' => 'get0',
        '_1' => 'get1',
        '_2' => 'get2',
        '_3' => 'get3',
        '_4' => 'get4',
        '_5' => 'get5',
        '_6' => 'get6',
        '_7' => 'get7',
        '_8' => 'get8',
        '_9' => 'get9',
        '_10' => 'get10',
        '_11' => 'get11',
        '_12' => 'get12',
        '_13' => 'get13',
        '_14' => 'get14'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['_0'] = isset($data['_0']) ? $data['_0'] : null;
        $this->container['_1'] = isset($data['_1']) ? $data['_1'] : null;
        $this->container['_2'] = isset($data['_2']) ? $data['_2'] : null;
        $this->container['_3'] = isset($data['_3']) ? $data['_3'] : null;
        $this->container['_4'] = isset($data['_4']) ? $data['_4'] : null;
        $this->container['_5'] = isset($data['_5']) ? $data['_5'] : null;
        $this->container['_6'] = isset($data['_6']) ? $data['_6'] : null;
        $this->container['_7'] = isset($data['_7']) ? $data['_7'] : null;
        $this->container['_8'] = isset($data['_8']) ? $data['_8'] : null;
        $this->container['_9'] = isset($data['_9']) ? $data['_9'] : null;
        $this->container['_10'] = isset($data['_10']) ? $data['_10'] : null;
        $this->container['_11'] = isset($data['_11']) ? $data['_11'] : null;
        $this->container['_12'] = isset($data['_12']) ? $data['_12'] : null;
        $this->container['_13'] = isset($data['_13']) ? $data['_13'] : null;
        $this->container['_14'] = isset($data['_14']) ? $data['_14'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets _0
     *
     * @return \Swagger\Client\Model\NetworksnetworkIdclientsprovisionPoliciesBySsid0
     */
    public function get0()
    {
        return $this->container['_0'];
    }

    /**
     * Sets _0
     *
     * @param \Swagger\Client\Model\NetworksnetworkIdclientsprovisionPoliciesBySsid0 $_0 _0
     *
     * @return $this
     */
    public function set0($_0)
    {
        $this->container['_0'] = $_0;

        return $this;
    }

    /**
     * Gets _1
     *
     * @return \Swagger\Client\Model\NetworksnetworkIdclientsprovisionPoliciesBySsid0
     */
    public function get1()
    {
        return $this->container['_1'];
    }

    /**
     * Sets _1
     *
     * @param \Swagger\Client\Model\NetworksnetworkIdclientsprovisionPoliciesBySsid0 $_1 _1
     *
     * @return $this
     */
    public function set1($_1)
    {
        $this->container['_1'] = $_1;

        return $this;
    }

    /**
     * Gets _2
     *
     * @return \Swagger\Client\Model\NetworksnetworkIdclientsprovisionPoliciesBySsid0
     */
    public function get2()
    {
        return $this->container['_2'];
    }

    /**
     * Sets _2
     *
     * @param \Swagger\Client\Model\NetworksnetworkIdclientsprovisionPoliciesBySsid0 $_2 _2
     *
     * @return $this
     */
    public function set2($_2)
    {
        $this->container['_2'] = $_2;

        return $this;
    }

    /**
     * Gets _3
     *
     * @return \Swagger\Client\Model\NetworksnetworkIdclientsprovisionPoliciesBySsid0
     */
    public function get3()
    {
        return $this->container['_3'];
    }

    /**
     * Sets _3
     *
     * @param \Swagger\Client\Model\NetworksnetworkIdclientsprovisionPoliciesBySsid0 $_3 _3
     *
     * @return $this
     */
    public function set3($_3)
    {
        $this->container['_3'] = $_3;

        return $this;
    }

    /**
     * Gets _4
     *
     * @return \Swagger\Client\Model\NetworksnetworkIdclientsprovisionPoliciesBySsid0
     */
    public function get4()
    {
        return $this->container['_4'];
    }

    /**
     * Sets _4
     *
     * @param \Swagger\Client\Model\NetworksnetworkIdclientsprovisionPoliciesBySsid0 $_4 _4
     *
     * @return $this
     */
    public function set4($_4)
    {
        $this->container['_4'] = $_4;

        return $this;
    }

    /**
     * Gets _5
     *
     * @return \Swagger\Client\Model\NetworksnetworkIdclientsprovisionPoliciesBySsid0
     */
    public function get5()
    {
        return $this->container['_5'];
    }

    /**
     * Sets _5
     *
     * @param \Swagger\Client\Model\NetworksnetworkIdclientsprovisionPoliciesBySsid0 $_5 _5
     *
     * @return $this
     */
    public function set5($_5)
    {
        $this->container['_5'] = $_5;

        return $this;
    }

    /**
     * Gets _6
     *
     * @return \Swagger\Client\Model\NetworksnetworkIdclientsprovisionPoliciesBySsid0
     */
    public function get6()
    {
        return $this->container['_6'];
    }

    /**
     * Sets _6
     *
     * @param \Swagger\Client\Model\NetworksnetworkIdclientsprovisionPoliciesBySsid0 $_6 _6
     *
     * @return $this
     */
    public function set6($_6)
    {
        $this->container['_6'] = $_6;

        return $this;
    }

    /**
     * Gets _7
     *
     * @return \Swagger\Client\Model\NetworksnetworkIdclientsprovisionPoliciesBySsid0
     */
    public function get7()
    {
        return $this->container['_7'];
    }

    /**
     * Sets _7
     *
     * @param \Swagger\Client\Model\NetworksnetworkIdclientsprovisionPoliciesBySsid0 $_7 _7
     *
     * @return $this
     */
    public function set7($_7)
    {
        $this->container['_7'] = $_7;

        return $this;
    }

    /**
     * Gets _8
     *
     * @return \Swagger\Client\Model\NetworksnetworkIdclientsprovisionPoliciesBySsid0
     */
    public function get8()
    {
        return $this->container['_8'];
    }

    /**
     * Sets _8
     *
     * @param \Swagger\Client\Model\NetworksnetworkIdclientsprovisionPoliciesBySsid0 $_8 _8
     *
     * @return $this
     */
    public function set8($_8)
    {
        $this->container['_8'] = $_8;

        return $this;
    }

    /**
     * Gets _9
     *
     * @return \Swagger\Client\Model\NetworksnetworkIdclientsprovisionPoliciesBySsid0
     */
    public function get9()
    {
        return $this->container['_9'];
    }

    /**
     * Sets _9
     *
     * @param \Swagger\Client\Model\NetworksnetworkIdclientsprovisionPoliciesBySsid0 $_9 _9
     *
     * @return $this
     */
    public function set9($_9)
    {
        $this->container['_9'] = $_9;

        return $this;
    }

    /**
     * Gets _10
     *
     * @return \Swagger\Client\Model\NetworksnetworkIdclientsprovisionPoliciesBySsid0
     */
    public function get10()
    {
        return $this->container['_10'];
    }

    /**
     * Sets _10
     *
     * @param \Swagger\Client\Model\NetworksnetworkIdclientsprovisionPoliciesBySsid0 $_10 _10
     *
     * @return $this
     */
    public function set10($_10)
    {
        $this->container['_10'] = $_10;

        return $this;
    }

    /**
     * Gets _11
     *
     * @return \Swagger\Client\Model\NetworksnetworkIdclientsprovisionPoliciesBySsid0
     */
    public function get11()
    {
        return $this->container['_11'];
    }

    /**
     * Sets _11
     *
     * @param \Swagger\Client\Model\NetworksnetworkIdclientsprovisionPoliciesBySsid0 $_11 _11
     *
     * @return $this
     */
    public function set11($_11)
    {
        $this->container['_11'] = $_11;

        return $this;
    }

    /**
     * Gets _12
     *
     * @return \Swagger\Client\Model\NetworksnetworkIdclientsprovisionPoliciesBySsid0
     */
    public function get12()
    {
        return $this->container['_12'];
    }

    /**
     * Sets _12
     *
     * @param \Swagger\Client\Model\NetworksnetworkIdclientsprovisionPoliciesBySsid0 $_12 _12
     *
     * @return $this
     */
    public function set12($_12)
    {
        $this->container['_12'] = $_12;

        return $this;
    }

    /**
     * Gets _13
     *
     * @return \Swagger\Client\Model\NetworksnetworkIdclientsprovisionPoliciesBySsid0
     */
    public function get13()
    {
        return $this->container['_13'];
    }

    /**
     * Sets _13
     *
     * @param \Swagger\Client\Model\NetworksnetworkIdclientsprovisionPoliciesBySsid0 $_13 _13
     *
     * @return $this
     */
    public function set13($_13)
    {
        $this->container['_13'] = $_13;

        return $this;
    }

    /**
     * Gets _14
     *
     * @return \Swagger\Client\Model\NetworksnetworkIdclientsprovisionPoliciesBySsid0
     */
    public function get14()
    {
        return $this->container['_14'];
    }

    /**
     * Sets _14
     *
     * @param \Swagger\Client\Model\NetworksnetworkIdclientsprovisionPoliciesBySsid0 $_14 _14
     *
     * @return $this
     */
    public function set14($_14)
    {
        $this->container['_14'] = $_14;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


